<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Event', 'doctrine');

/**
 * BaseEvent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $asso_id
 * @property integer $type_id
 * @property string $name
 * @property string $description
 * @property timestamp $start_date
 * @property timestamp $end_date
 * @property boolean $is_public
 * @property boolean $is_weekmail
 * @property string $place
 * @property string $affiche
 * @property string $summary
 * @property Asso $Asso
 * @property EventType $Type
 * 
 * @method integer   getAssoId()      Returns the current record's "asso_id" value
 * @method integer   getTypeId()      Returns the current record's "type_id" value
 * @method string    getName()        Returns the current record's "name" value
 * @method string    getDescription() Returns the current record's "description" value
 * @method timestamp getStartDate()   Returns the current record's "start_date" value
 * @method timestamp getEndDate()     Returns the current record's "end_date" value
 * @method boolean   getIsPublic()    Returns the current record's "is_public" value
 * @method boolean   getIsWeekmail()  Returns the current record's "is_weekmail" value
 * @method string    getPlace()       Returns the current record's "place" value
 * @method string    getAffiche()     Returns the current record's "affiche" value
 * @method string    getSummary()     Returns the current record's "summary" value
 * @method Asso      getAsso()        Returns the current record's "Asso" value
 * @method EventType getType()        Returns the current record's "Type" value
 * @method Event     setAssoId()      Sets the current record's "asso_id" value
 * @method Event     setTypeId()      Sets the current record's "type_id" value
 * @method Event     setName()        Sets the current record's "name" value
 * @method Event     setDescription() Sets the current record's "description" value
 * @method Event     setStartDate()   Sets the current record's "start_date" value
 * @method Event     setEndDate()     Sets the current record's "end_date" value
 * @method Event     setIsPublic()    Sets the current record's "is_public" value
 * @method Event     setIsWeekmail()  Sets the current record's "is_weekmail" value
 * @method Event     setPlace()       Sets the current record's "place" value
 * @method Event     setAffiche()     Sets the current record's "affiche" value
 * @method Event     setSummary()     Sets the current record's "summary" value
 * @method Event     setAsso()        Sets the current record's "Asso" value
 * @method Event     setType()        Sets the current record's "Type" value
 * 
 * @package    simde
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('event');
        $this->hasColumn('asso_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('start_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('end_date', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('is_public', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('is_weekmail', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('place', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('affiche', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('summary', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asso', array(
             'local' => 'asso_id',
             'foreign' => 'id'));

        $this->hasOne('EventType as Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}