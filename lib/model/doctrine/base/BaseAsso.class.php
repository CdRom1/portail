<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Asso', 'doctrine');

/**
 * BaseAsso
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $login
 * @property integer $pole_id
 * @property integer $type_id
 * @property string $url_site
 * @property string $description
 * @property string $logo
 * @property boolean $active
 * @property boolean $passation
 * @property string $salle
 * @property string $phone
 * @property string $facebook
 * @property string $summary
 * @property Pole $Pole
 * @property TypeAsso $Type
 * @property Pole $PoleInfos
 * @property Doctrine_Collection $AssoMember
 * @property Doctrine_Collection $Event
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $Abonnement
 * 
 * @method string              getName()        Returns the current record's "name" value
 * @method string              getLogin()       Returns the current record's "login" value
 * @method integer             getPoleId()      Returns the current record's "pole_id" value
 * @method integer             getTypeId()      Returns the current record's "type_id" value
 * @method string              getUrlSite()     Returns the current record's "url_site" value
 * @method string              getDescription() Returns the current record's "description" value
 * @method string              getLogo()        Returns the current record's "logo" value
 * @method boolean             getActive()      Returns the current record's "active" value
 * @method boolean             getPassation()   Returns the current record's "passation" value
 * @method string              getSalle()       Returns the current record's "salle" value
 * @method string              getPhone()       Returns the current record's "phone" value
 * @method string              getFacebook()    Returns the current record's "facebook" value
 * @method string              getSummary()     Returns the current record's "summary" value
 * @method Pole                getPole()        Returns the current record's "Pole" value
 * @method TypeAsso            getType()        Returns the current record's "Type" value
 * @method Pole                getPoleInfos()   Returns the current record's "PoleInfos" value
 * @method Doctrine_Collection getAssoMember()  Returns the current record's "AssoMember" collection
 * @method Doctrine_Collection getEvent()       Returns the current record's "Event" collection
 * @method Doctrine_Collection getArticle()     Returns the current record's "Article" collection
 * @method Doctrine_Collection getAbonnement()  Returns the current record's "Abonnement" collection
 * @method Asso                setName()        Sets the current record's "name" value
 * @method Asso                setLogin()       Sets the current record's "login" value
 * @method Asso                setPoleId()      Sets the current record's "pole_id" value
 * @method Asso                setTypeId()      Sets the current record's "type_id" value
 * @method Asso                setUrlSite()     Sets the current record's "url_site" value
 * @method Asso                setDescription() Sets the current record's "description" value
 * @method Asso                setLogo()        Sets the current record's "logo" value
 * @method Asso                setActive()      Sets the current record's "active" value
 * @method Asso                setPassation()   Sets the current record's "passation" value
 * @method Asso                setSalle()       Sets the current record's "salle" value
 * @method Asso                setPhone()       Sets the current record's "phone" value
 * @method Asso                setFacebook()    Sets the current record's "facebook" value
 * @method Asso                setSummary()     Sets the current record's "summary" value
 * @method Asso                setPole()        Sets the current record's "Pole" value
 * @method Asso                setType()        Sets the current record's "Type" value
 * @method Asso                setPoleInfos()   Sets the current record's "PoleInfos" value
 * @method Asso                setAssoMember()  Sets the current record's "AssoMember" collection
 * @method Asso                setEvent()       Sets the current record's "Event" collection
 * @method Asso                setArticle()     Sets the current record's "Article" collection
 * @method Asso                setAbonnement()  Sets the current record's "Abonnement" collection
 * 
 * @package    simde
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAsso extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asso');
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('login', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('pole_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('url_site', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('logo', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('passation', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('salle', 'string', 6, array(
             'type' => 'string',
             'length' => 6,
             ));
        $this->hasColumn('phone', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('facebook', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('summary', 'string', 150, array(
             'type' => 'string',
             'length' => 150,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Pole', array(
             'local' => 'pole_id',
             'foreign' => 'id'));

        $this->hasOne('TypeAsso as Type', array(
             'local' => 'type_id',
             'foreign' => 'id'));

        $this->hasOne('Pole as PoleInfos', array(
             'local' => 'id',
             'foreign' => 'asso_id'));

        $this->hasMany('AssoMember', array(
             'local' => 'id',
             'foreign' => 'asso_id'));

        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'asso_id'));

        $this->hasMany('Article', array(
             'local' => 'id',
             'foreign' => 'asso_id'));

        $this->hasMany('Abonnement', array(
             'local' => 'id',
             'foreign' => 'asso_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}