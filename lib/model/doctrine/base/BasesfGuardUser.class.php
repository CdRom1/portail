<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('sfGuardUser', 'doctrine');

/**
 * BasesfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $first_name
 * @property string $last_name
 * @property string $email_adress
 * @property string $username
 * @property string $algorithm
 * @property string $salt
 * @property string $password
 * @property string $domain
 * @property boolean $is_active
 * @property boolean $is_super_admin
 * @property timestamp $last_login
 * 
 * @method string      getFirstName()      Returns the current record's "first_name" value
 * @method string      getLastName()       Returns the current record's "last_name" value
 * @method string      getEmailAdress()    Returns the current record's "email_adress" value
 * @method string      getUsername()       Returns the current record's "username" value
 * @method string      getAlgorithm()      Returns the current record's "algorithm" value
 * @method string      getSalt()           Returns the current record's "salt" value
 * @method string      getPassword()       Returns the current record's "password" value
 * @method string      getDomain()         Returns the current record's "domain" value
 * @method boolean     getIsActive()       Returns the current record's "is_active" value
 * @method boolean     getIsSuperAdmin()   Returns the current record's "is_super_admin" value
 * @method timestamp   getLastLogin()      Returns the current record's "last_login" value
 * @method sfGuardUser setFirstName()      Sets the current record's "first_name" value
 * @method sfGuardUser setLastName()       Sets the current record's "last_name" value
 * @method sfGuardUser setEmailAdress()    Sets the current record's "email_adress" value
 * @method sfGuardUser setUsername()       Sets the current record's "username" value
 * @method sfGuardUser setAlgorithm()      Sets the current record's "algorithm" value
 * @method sfGuardUser setSalt()           Sets the current record's "salt" value
 * @method sfGuardUser setPassword()       Sets the current record's "password" value
 * @method sfGuardUser setDomain()         Sets the current record's "domain" value
 * @method sfGuardUser setIsActive()       Sets the current record's "is_active" value
 * @method sfGuardUser setIsSuperAdmin()   Sets the current record's "is_super_admin" value
 * @method sfGuardUser setLastLogin()      Sets the current record's "last_login" value
 * 
 * @package    simde
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasesfGuardUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sf_guard_user');
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('email_adress', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 255,
             ));
        $this->hasColumn('username', 'string', 128, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => 128,
             ));
        $this->hasColumn('algorithm', 'string', 128, array(
             'type' => 'string',
             'default' => 'sha1',
             'notnull' => true,
             'length' => 128,
             ));
        $this->hasColumn('salt', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('password', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('domain', 'string', 15, array(
             'type' => 'string',
             'length' => 15,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('is_super_admin', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('last_login', 'timestamp', null, array(
             'type' => 'timestamp',
             ));


        $this->index('is_active_idx', array(
             'fields' => 
             array(
              0 => 'is_active',
             ),
             ));
        $this->index('full_login', array(
             'fields' => 
             array(
              0 => 'username',
              1 => 'domain',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}