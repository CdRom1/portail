<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AssoMember', 'doctrine');

/**
 * BaseAssoMember
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $asso_id
 * @property integer $role_id
 * @property Asso $Asso
 * @property Role $Role
 * 
 * @method integer    getUserId()  Returns the current record's "user_id" value
 * @method integer    getAssoId()  Returns the current record's "asso_id" value
 * @method integer    getRoleId()  Returns the current record's "role_id" value
 * @method Asso       getAsso()    Returns the current record's "Asso" value
 * @method Role       getRole()    Returns the current record's "Role" value
 * @method AssoMember setUserId()  Sets the current record's "user_id" value
 * @method AssoMember setAssoId()  Sets the current record's "asso_id" value
 * @method AssoMember setRoleId()  Sets the current record's "role_id" value
 * @method AssoMember setAsso()    Sets the current record's "Asso" value
 * @method AssoMember setRole()    Sets the current record's "Role" value
 * 
 * @package    simde
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAssoMember extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('asso_member');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('asso_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('role_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Asso', array(
             'local' => 'asso',
             'foreign' => 'id'));

        $this->hasOne('Role', array(
             'local' => 'role',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}